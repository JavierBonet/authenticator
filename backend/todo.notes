To do list:

  BACKEND
    [√] Create token refreshment routes and controller, check the logic in
      - https://www.reddit.com/r/reactjs/comments/jjkddv/how_to_store_jwt_in_the_client_side/?rdt=57432
      - https://www.geeksforgeeks.org/jwt-authentication-with-refresh-tokens/
      In the login, I need to retrieve 
        - access token
        - refresh token
      then I need create a /refresh endpoint
    
    [√] Add script that creates collections and populates the DB with mock data (from chatGPT)

    [√] Create the following protected endpoints:
      - /movies: retrieves a list of movies
      - /products: retrieves a list of products
      - /programming-languages: retrieves a list of programming-languages
        - This one in particular should be only available for developers role
    
    [√] Create /logout endpoint that removes refreshToken cookie

    [√] Add role management:
      - What I think it's needed is to have a role field in the users collection and retrieve it in the token. Then, using it, we can do validations about it

  FRONTEND
    [√] Check where should I store the access token and the refresh token in the front
      - Access  token: in memory
      - refresh token: http-only cookie

    [√] Create login page
      - redirect to user home page
    [√] Create register page
      - redirect to login page

    [√] Create products page
    [√] Create movies page
    [√] Create programming languages page

    [√] Add logout call to log out button

    [√] When logged in, set a local storage variable that will be used to know if a user is logged or not
      - Use this to avoid relying on the token to show different layouts

    [√] Check if the token that comes from the back is the same

    [√] Check what's happening when login in and change between the sections, seems that it's wrongly refreshing
        the token and setting the role


  [√] COMPLETE README

  [√] Create scripts in root folder to start app
